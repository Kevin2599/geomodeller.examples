#  V6.0 New clustering tool Example job file - 
# A workflow for doing a fault clustering,
#  to define a point datasets where there is strong support for 2D Faults
# use the anisotrophic covariance of 3D locations, after Ouillon
# 0.  first convert from geodetic to distance units in kilometers
# a. perform a clustering, to get number of 2D fault regions, 
# b. the dip comes from the third eigenvector
# 
# Usage: fmanager -batch landers_earthquake_clustering.task  
#

IntrepidTask {
	ClusterAnalysis {  
		DataBase: "../datasets/LandersAfterShocks..DIR"  # dataset is in lat/long
		OutputCluster: "Fault_centres_landers..DIR"
		ReportFile: "cluster_landers.rpt"		
		ClusterType : Generic3D;  # points dataset coming from the Landers processed events		
		Distance_Units: kilometers;  # depths in kilometers, so convert XY as well

		Projection{  #  critical project conversion of coord to UTM on input from geodetic
				map_projection: "NUTM11"
				spatial_datum: "NAD83"
				}
		ElevationCoordinateSystem: END;  #  depths are positive
		Cluster {  # do a cluster analysis
			ClusterAlgorithm : Anisotropic;  # anisotropic clustering analysis,
			Maximum_Recursion_Steps: 50;  # maximum number of plates, each step creates a new plate
			Location_Uncertainty: 1.8;  # out of fault plane distance (km), keep splitting if more than this value
			Frequency_Cluster_Forming_Reports: 5; # report every 5 recursive steps
			Cull_cluster_uncertainties: true
  			Restrict_Plate_Dips: false
  			MaximumDipRange: 20
			}
		view { # openGL pop-up window
			show_3D_viewer: true;   # turn off for batch testing
			project_zmin: 0;	# needed for co-variance range calcs  kms
			project_zmax: 15;	 
#			show_cluster_ellipsoids: true;  # show the bounds of each fault as an ellipse
			show_original_signal_grid: false;  # show signal grid as a grey scale image
#			show_DTM_grid: true;  # show the DTM as a true warped 3D surface
			show_Cluster_FormingStages: true;  # show/deug the cluster forming process in the 3D viewer
			write_vtk_clusterPoints: true;	
			vtk_clusterPointsFile: "landers.vtp";		
			vertical_scale: 1.0;
			show_ImplicitFunction_Fault: true;  ## only for the anisotropic option
			Minimum_Fault_Vertical_Extent: 6.0;  # km
		}
		Generated_By_GUI: false;
}}
